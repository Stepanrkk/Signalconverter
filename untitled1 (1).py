# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N20-ysz_aS5nAAw-dvcaHlLdI3veG3Zi
"""

# Вводится 5-ти значное двоичное число - сообщение

import numpy as np

message = np.array([1, 1, 1, 1, 1], dtype= bool)

print('Введите сообщение из 5 знаков')
messagestr = input()
for i in range(len(messagestr)) :
  if (messagestr[i] == '0') : 
    message[i] = 0
  else :
     message[i] = 1
print(message)

# Полученное сообщение кодируется кодом RM(1, 4)

G = np.matrix([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 
              [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 
              [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 
              [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 
              [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]], dtype = bool)

coded_message = np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype = bool)


for i in range(16) :
  
  x = np.logical_xor(np.logical_and(message[0], G[0, i]), np.logical_and(message[1], G[1, i]))

  for j in range(2, 5) :
    x = np.logical_xor(x, np.logical_and(message[j], G[j, i]))
    coded_message[i] = x
coded_message

# Вводится помеха в одном случайном бите

broken_message = coded_message
z = np.random.randint(0, 15)
print(z + 1) 
broken_message[z] = np.logical_not(coded_message[z])
broken_message

# Исправление ошибки

Y = np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
for i in range(16):
  if (coded_message[i] == False) :
    Y[i] = -1
YH = np.matmul(Y, hadamard(16))

max = YH[1]
imax = 0
for i in range(1, 16) : 
  if (YH[i] > max) : 
    max = YH[i]
    imax = i



fixed_message = np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype = bool)
for i in range(16) :
  if (hadamard(16)[imax, i] == -1) :
    fixed_message[i] = 0

# Расшифровка сообщения

decoded_message = [1, 1, 1, 1, 1]
decoded_message[0] = int(fixed_message[0])
decoded_message[1] = int(np.logical_xor(True, fixed_message[8]))
decoded_message[2] = int(np.logical_xor(True, fixed_message[4]))
decoded_message[3] = int(np.logical_xor(True, fixed_message[2]))
decoded_message[4] = int(np.logical_xor(True, fixed_message[1]))
print(decoded_message)